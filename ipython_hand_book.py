# -*- coding: utf-8 -*-
"""ipython hand book.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1uHBCBNSaQ1J2wd5KpTSvZDkZTVRVlW01
"""

help(len)

len?

len??

L  = [4, 5, 62, 5]
L?

!L.insert??

!square??

*Warning?

str.*find*?

command = "def square(x): /n return x ** 2 /n for N in range(1, 4): /n print(f""{N} squared is {square(N)}"")"

! touch myscript.py && echo {command} > myscript.py

# Commented out IPython magic to ensure Python compatibility.
#  %run myscript.py

# Commented out IPython magic to ensure Python compatibility.
# %timeit L = [n ** 2 for n in range(1000)]

# Commented out IPython magic to ensure Python compatibility.
# % timeit?

# Commented out IPython magic to ensure Python compatibility.
# %magic

# Commented out IPython magic to ensure Python compatibility.
# %lsmagic

import math

math.sin(2)
math.cos(2)

In

Out

math.sin(3)

_

_22

math.sin(4)+math.cos(2);

_24

# Commented out IPython magic to ensure Python compatibility.
# %history

!pwd

!ls

content = !ls

content

cd ../

mkdir "kll"

ls

# Commented out IPython magic to ensure Python compatibility.
# %automagic??

# Commented out IPython magic to ensure Python compatibility.
# %automagic??

def func1(a, b):
 return a / b

def func2(x):
 a = x
 b = x - 1
 return func1(a, b)

func2(1)

# Commented out IPython magic to ensure Python compatibility.
# %xmode plain

# Commented out IPython magic to ensure Python compatibility.
# %xmode verbose

# Commented out IPython magic to ensure Python compatibility.
# %debug <ipython-input-59-f69671a639b0>(2)func2()

# Commented out IPython magic to ensure Python compatibility.
# %debug <ipython-input-16-f69671a639b0>(2) func2()

# Commented out IPython magic to ensure Python compatibility.
# %debug func2()

# Commented out IPython magic to ensure Python compatibility.
# %timeit sum(range(100))

def sum_of_lists(N):
 total = 0
 for i in range(5):
  L = [j ^ (j >> i) for j in range(N)]
  total += sum(L)
 return total

# Commented out IPython magic to ensure Python compatibility.
# %prun sum_of_lists(1000000)

!pip install line_profiler

# Commented out IPython magic to ensure Python compatibility.
# %load_ext line_profiler

# Commented out IPython magic to ensure Python compatibility.
# %lprun -f sum_of_lists sum_of_lists(5000)

! pip install memory_profiler

# Commented out IPython magic to ensure Python compatibility.
# %load_ext memory_profiler

# Commented out IPython magic to ensure Python compatibility.
# %memit sum_of_lists(1000000)

# Commented out IPython magic to ensure Python compatibility.
# %%file mprun_demo.py
# def sum_of_lists(N):
#  total = 0
#  for i in range(5):
#   L = [j ^ (j >> i) for j in range(N)]
#   total += sum(L)
#   del L # remove reference to L
#  return total

# Commented out IPython magic to ensure Python compatibility.
from mprun_demo import sum_of_lists

# %mprun -f sum_of_lists sum_of_lists(1000000)

